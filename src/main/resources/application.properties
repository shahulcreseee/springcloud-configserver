#Server port
server.port=8888
spring.application.name=config-server

#profiles you can give redis jdbc or git
spring.profiles.active=git

##Spring basic security for accessing gitrepo
#spring.security.user.name=admin
#spring.security.user.password=admin

#spring.cloud.config.override-system-properties=false

#native profile loads config files from a local classpath
#spring.cloud.config.server.native.search-locations specifies the path to config files
#spring.cloud.config.server.native.search-locations=file:///C:/shahul/nreal/referralmanagement/config-server-repo

#Git Repository configuration as property sources
spring.cloud.config.server.git.uri=https://github.com/shahulcreseee/springconfigsample.git
spring.cloud.config.server.git.username={cipher}40f875c4e467a0399a1554d406c6fa9369c9fc367e1efaf06a683fc23f826c32
spring.cloud.config.server.git.password={cipher}12c3742e1bcada02bb79dd473557497e8717842d2f0e4515c2d6967276b56330b86c1c9a6c30193176ec30d3d3f1d519e2c2f636241303a3c79529063b506de6
spring.cloud.config.server.git.default-label=master

#Enable /busrefresh endpoint
management.endpoints.web.exposure.include=*

##JDBC as property sources
#spring.datasource.hikari.connection-timeout=5000
#spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/springconfig?useSSL=false
#spring.cloud.config.server.jdbc.sql= SELECT KEY, VALUE from PROPERTIES where APPLICATION=? and PROFILE=? and LABEL=?
#spring.datasource.username=
#spring.datasource.password=
#spring.jpa.show-sql=true
#
##Redis as property source
#spring.redis.host=127.0.0.1
#spring.redis.port=6379

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.hostname=${spring.application.name}

#RabbitMQ's connection credentials
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

spring.cloud.bus.enabled=true
spring.kafka.bootstrap-servers=http://localhost:9092

encrypt.key=@#$RET&^fgh@$!